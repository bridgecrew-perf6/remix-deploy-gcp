name: Deploy to GCP

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  deploy:
    name: Deploying to Google Cloud
    runs-on: ubuntu-latest
    environment: gcp

    steps:
      - name: ðŸš€ Checkout
        uses: actions/checkout@v2

      - name: ðŸš€ Cache node_modules
        id: cache-node-modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules-deploy
        with:
          path: node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: ðŸš€ Install dependencies
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: yarn install --frozen-lockfile

      - name: ðŸš€ Build Remix App
        run: yarn build

      - name: ðŸš€ Authentication Google Cloud
        id: "auth"
        uses: "google-github-actions/auth@v0"
        with:
          credentials_json: "${{ secrets.GCP_CREDENTIALS }}"

      - name: ðŸš€ Deploy to App Engine
        id: deploy
        uses: google-github-actions/deploy-appengine@v0
        with:
          deliverables: app.yaml
          version: v1
          promote: false
          project_id: ${{ secrets.GCP_PROJECT }}

      - name: ðŸš€ Deployed Environment
        run: curl "${{ steps.deploy.outputs.url }}"

      - name: ðŸš€ Send message to Slack Channel
        id: slack
        uses: slackapi/slack-github-action@v1.18.0
        with:
          payload: |
            {
              "text": "Deploy realizado",
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "Uma nova versÃ£o de remix-app foi enviada para produÃ§Ã£o! usuÃ¡rio de quem mergeou, nome do PR, informaÃ§Ãµes importantes"
                  }
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
